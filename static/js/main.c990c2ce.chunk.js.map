{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","word1","word2","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","className","type","classNames","this","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAgBzB,OAbIC,IAAaJ,EAASO,QACxBD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC/CN,IAAaJ,EAASY,QAC/BN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAGvDR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SAjCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNd,SAAUJ,EAASmB,KACnBd,YAAY,GAHhB,4CAME,WAA2B,IAAD,OACxB,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYC,KAAKL,MAAMd,WAAaJ,EAASO,UAE/CiB,QAAS,kBACP,EAAKC,SAAS,CAAErB,SAAUJ,EAASO,WANvC,iCAYA,wBACEc,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYC,KAAKL,MAAMd,WAAaJ,EAASY,SAE/CY,QAAS,kBACP,EAAKC,SAAS,CAAErB,SAAUJ,EAASY,UANvC,4BAYA,wBACES,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAsC,IAA1BC,KAAKL,MAAMb,aAEzBmB,QAAS,kBACP,EAAKC,UAAS,SAACP,GAAD,MACZ,CAAEb,YAAaa,EAAMb,gBAP3B,sBAcEkB,KAAKL,MAAMd,WAAaJ,EAASmB,MAAQI,KAAKL,MAAMb,aACpD,wBACEgB,KAAK,SACLD,UAAU,4BACVI,QAAS,WACP,EAAKC,SAAS,CAAErB,SAAUJ,EAASmB,KAAMd,YAAY,KAJzD,sBAYJ,6BACE,6BAEIH,EAAkBD,EAAiB,CACjCG,SAAUmB,KAAKL,MAAMd,SACrBC,WAAYkB,KAAKL,MAAMb,aACtBqB,KAAI,SAACC,GACN,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBArE3B,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c990c2ce.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((word1, word2) => word1.localeCompare(word2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((word1, word2) => word1.length - word2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport class App extends React.Component<{}, ReorderOptions> {\n  state = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  render(): React.ReactNode {\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': this.state.sortType !== SortType.ALPABET,\n            })}\n            onClick={() => (\n              this.setState({ sortType: SortType.ALPABET })\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': this.state.sortType !== SortType.LENGTH,\n            })}\n            onClick={() => (\n              this.setState({ sortType: SortType.LENGTH })\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': this.state.isReversed !== true,\n            })}\n            onClick={() => (\n              this.setState((state) => (\n                { isReversed: !state.isReversed }\n              ))\n            )}\n          >\n            Reverse\n          </button>\n\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({ sortType: SortType.NONE, isReversed: false });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {\n              getReorderedGoods(goodsFromServer, {\n                sortType: this.state.sortType,\n                isReversed: this.state.isReversed,\n              }).map((good: string) => {\n                return (\n                  <li key={good} data-cy=\"Good\">{good}</li>\n                );\n              })\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}